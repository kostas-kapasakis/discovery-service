import {Router, Request, Response} from 'express';


const groupsRouter = Router();


groupsRouter.post('/:group/:id', (req:Request, res:Response) => {

    console.log('groups post request ');
    console.log(req.params);
    console.log(req.path);

        /*

         1) Register an app instance in specified group

         2) id is a unique identifier of app instance generated by client

         3) if instance is already registered the updateAt timestamp must be updated

         4) The request body can specify meta information that will be attached to the instance

         5) returns json with the following structure

                 {
                    "id": "e335175a-eace-4a74-b99c-c6466b6afadd",   // echoed from path parameter
                    "group": "particle-detector",                   // echoed from path parameter
                    "createdAt": 1571418096158,                     // first registered heartbeat
                    "updatedAt": 1571418124127,                     // last registered heartbeat
                    "meta": {                                       // meta echoed from request body
                        "foo": 1
                       }
                 }

         */

    res.send('Post request')

});


groupsRouter.delete('/:group/:id', (req:Request, res:Response) => {
    console.log('groups delete request ');
    console.log(req.params);
    console.log(req.path);
    // unregister an application instance
    res.send('DELETE request')

});


groupsRouter.get('/:group', (req:Request, res:Response) => {
    console.log('groups get request ');
    console.log(req.params);
    console.log(req.path);


    res.send('GET GROUP request')

    /* returns a json array describing instances of the group

    [
    {
        "id": "e335175a-eace-4a74-b99c-c6466b6afadd",
        "group": "particle-detector",
        "createdAt": 1571418096158,
        "updatedAt": 1571418124127,
        "meta": {
            "foo": 1
        }
    },
    // ...
]

     */
});


export default groupsRouter;